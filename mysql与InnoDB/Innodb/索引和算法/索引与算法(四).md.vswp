vnote_backup_file_826537664 /home/chengcongyue/文档/vnote_notebooks/chengcongyue/mysql与InnoDB/Innodb/索引和算法/索引与算法(四).md
# 索引与算法(四)
## 哈希算法
### 哈希表
![](_v_images/20190428193957646_778851995.png)
![](_v_images/20190428194147770_1563618594.png)
![](_v_images/20190428194157463_342991032.png)
当两个关键字映射到了同一个槽时,这样就会发生碰撞,在数据库中使用的碰撞解决技术,这种技术被称作是链地址法,在同一个槽中的所有元素连成一个链表,
![](_v_images/20190428194437919_1925465867.png)
![](_v_images/20190428194504725_25336793.png)
### Innodb中的哈希算法
在缓冲池的哈希表中,缓冲池的page页都有一个chain指针,它指向相同哈希函数值的页,
![](_v_images/20190428194733152_1839280668.png)
查找方式:
![](_v_images/20190428194939770_181086431.png)
也就是在表空间确定一个位置,然后在通过哈希函数放到各个槽中.
## 全局索引
### 概述
全文检索就是将数据库或者书中的某篇文章内任意的信息查找出来的技术
### 倒排索引
inverted file Index {单词,单词所在文档的ID}
full inverted index {单词,{单词所在文档的ID,在具体文档的位置}}
![](_v_images/20190428200018036_1035737132.png)
![](_v_images/20190428200029987_1890417095.png)
### Innodb全文索引
1.2x之后开始支持全文索引的技术,full inverted index 的方式,在Innodb存储引擎中,